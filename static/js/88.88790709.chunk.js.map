{"version":3,"file":"static/js/88.88790709.chunk.js","mappings":"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","sources":["components/SigningForm/SigningFormStyled.js","components/SigningForm/SigningForm.jsx","pages/SigninPage/SigninPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport backMob from '../../images/welcomePage/background-mobile.png';\nimport backMob2x from '../../images/welcomePage/background-mobile@2x.png';\nimport backTabl from '../../images/welcomePage/background-tablet.png';\nimport backTabl2x from '../../images/welcomePage/background-tablet@2x.png';\nimport backDesktop from '../../images/welcomePage/background-desktop.png';\nimport backDesktop2x from '../../images/welcomePage/background-desktop@2x.png';\nimport imgMob from '../../images/welcomePage/Order-mobile@1x-min.png';\nimport imgMob2x from '../../images/welcomePage/Order-mobile@2x-min.png';\nimport imgTabl from '../../images/welcomePage/Order-tablet@1x-min.png';\nimport imgTabl2x from '../../images/welcomePage/Order-tablet@2x-min.png';\nimport imgDesktop from '../../images/welcomePage/Order-desktop@1x-min.png';\nimport imgDesktop2x from '../../images/welcomePage/Order-desktop@2x-min.png';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nconst setFocusColor = (props) => {\n  const { error, touched } = props;\n  if (error === \"Your password is little secure\" && touched) {\n    return \"#F6C23E\"\n  }\n  if (error && touched) {\n        return \"#E74A3B\"\n      } else if (!error && touched) {\n        return \"#3CBC81\"\n      } else {\n        return \"white\"\n      }\n};\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n  padding-top: 305px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 59px;\n  background-color: ${props => props.theme.colors.white};\n  background-image: url('${backMob}');\n  background-position: 50% 100%;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 767px),\n    screen and (min-resolution: 192dpi) and (max-width: 767px),\n    screen and (min-resolution: 2dppx) and (max-width: 767px) {\n    background-image: url(${backMob2x});\n  }\n\n  //tablet\n  @media screen and (min-width: 768px) {\n    padding-top: 444px;\n    background-image: url(${backTabl});\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: url(${backTabl2x});\n  }\n\n  //desktop\n  @media screen and (min-width: 1280px) {\n    padding-top: 115px;\n    background-image: url(${backDesktop});\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 1280px),\n    screen and (min-resolution: 192dpi) and (min-width: 1280px),\n    screen and (min-resolution: 2dppx) and (min-width: 1280px) {\n    background-image: url(${backDesktop2x});\n  }\n`;\n\nexport const SVG = styled.svg`\n    position: absolute;\n    top: 50%;\n    left: 18px;\n    transform: translateY(-50%);\n    stroke: ${props => props.color};\n`;\n\nexport const InfoSVG = styled.svg`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 50%;\n  right: 19px;\n  transform: translateY(-50%);\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-family: 'Poppins', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  position: absolute;\n  color: ${props => props.color};\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  &:not(:nth-child(3)) {\n    margin-bottom: 12px;\n    \n    //tablet\n    @media screen and (min-width: 768px) {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const Input = styled(Field)`\n    width: 279px;\n    height: 45px;\n    padding-top: 12px;\n    padding-left: 40px;\n    padding-bottom: 12px;\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    border-radius: 6px;\n    background-color: transparent;\n    font-size: 14px;\n    line-height: 1.5;\n    letter-spacing: -0.02em;\n    color: ${props => props.theme.colors.white};\n\n    &::placeholder {\n      color: ${props => props.theme.colors.white};\n      opacity: 0.8;\n    }\n\n    &:focus-visible {\n      outline: none;\n      border-color: white;\n      border-color: ${props => setFocusColor(props)};\n    }\n    \n    //tablet\n    @media screen and (min-width: 768px) {\n      padding-top: 16px;\n      padding-left: 50px;\n      padding-bottom: 16px;\n      min-width: 400px;\n      height: 59px;\n      font-size: 18px;\n      line-height: 1.5;\n    }\n`;\n\nexport const Button = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 45px;\n    margin-top: 28px;\n    font-size: 16px;\n    line-height: 1.12;\n    border-radius: 6px;\n    border: none;\n    background-color: ${props => props.theme.colors.green};\n    color: ${props => props.theme.colors.white};\n\n    transition: color ${props => props.theme.hover.transition};\n    \n    &:hover,\n    &:focus {\n      color: ${props => props.theme.colors.black};\n    }\n    \n    //tablet\n    @media screen and (min-width: 768px) {\n      height: 59px;\n      margin-top: 50px;\n    }\n`;\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 18px;\n    padding: 32px 28px 40px;\n    width: 335px;\n    border-radius: 30px;\n    background-color: #2a2c36;\n    color: ${props => props.theme.colors.white};\n    box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n    z-index: 2;\n\n    //tablet\n    @media screen and (min-width: 768px) {\n      width: 500px;\n      padding: 44px 50px;\n    }\n`;\n  \nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  text-decoration: underline;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.white};\n  transition: color ${props => props.theme.hover.transition};\n  \n  //tablet\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n  \n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.green};\n  }\n  `;\n\nexport const Title = styled.h2`\n  font-family: 'Poppins', sans-serif;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.17;\n  margin-bottom: 18px;\n  letter-spacing: -0.02em;\n\n  //tablet\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n    font-size: 28px;\n    line-height: 1.07;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  position: absolute;\n  top: -218px;\n  right: 50%;\n  transform: translateX(50%);\n  width: 285px;\n  height: 250px;\n  background-image: url('${imgMob}');\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 767px),\n    screen and (min-resolution: 192dpi) and (max-width: 767px),\n    screen and (min-resolution: 2dppx) and (max-width: 767px) {\n    background-image: url(${imgMob2x});\n  }\n\n    //tablet\n  @media screen and (min-width: 768px) {\n    top: -348px;\n    width: 409px;\n    height: 359px;\n    background-image: url(${imgTabl});\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: url(${imgTabl2x});\n  }\n\n  //desktop\n  @media screen and (min-width: 1280px) {\n    position: static;\n    transform: translateX(0);\n    width: 532px;\n    height: 468px;\n    background-image: url(${imgDesktop});\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 1280px),\n    screen and (min-resolution: 192dpi) and (min-width: 1280px),\n    screen and (min-resolution: 2dppx) and (min-width: 1280px) {\n    background-image: url(${imgDesktop2x});\n  }\n  `;\n\nexport const Container = styled.div`\n  position: relative;\n\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    gap: 115px;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { loginUser } from 'redux/user/userOperations';\nimport { Formik } from 'formik';\nimport { LinkStyled, FormWrapper, InfoSVG, Section, SVG, Error, Label, Container, BackgroundImage, Title, Input, Button, StyledForm } from './SigningFormStyled';\nimport sprite from '../../images/welcomePage/symbol-defs.svg';\n\nconst setSVGColor = (errors, touched) => {\n  if (errors === \"Your password is little secure\" && touched) {\n    return \"#F6C23E\"\n  }\n  if (errors && touched) {\n        return \"#E74A3B\"\n      } else if (!errors && touched) {\n        return \"#3CBC81\"\n      } else {\n        return \"white\"\n      }\n};\n\nconst setInfoSVG = (errors, touched) => {\n  if (errors === \"Your password is little secure\" && touched) {\n    return <InfoSVG><use href={sprite + '#icon-warning'} /></InfoSVG>\n  }\n  if (errors && touched) {\n        return <InfoSVG><use href={sprite + '#icon-error'} /></InfoSVG>\n      } else if (!errors && touched) {\n        return <InfoSVG><use href={sprite + '#icon-success'} /></InfoSVG>\n      }\n    return;\n};\n\nexport const SigninForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  function validateEmail(value) {\n    let error;\n    if (!value) {\n      error = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      error = 'Invalid email address';\n    }\n    return error;\n  }\n\n  function validatePassword(value) {\n    let error;\n    if (!value) {\n      error = 'Required!';\n    }\n    return error;\n  }\n\n  return (\n    <Section>\n      <Container>\n        <BackgroundImage />\n      <FormWrapper>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          validateOnChange={true}\n          validateOnBlur={true}\n          onSubmit={(values, actions) => {\n            dispatch(loginUser(values))\n              .unwrap()\n              .then(() => {\n                toast.success(`User ${values.email} is succesfully logged in`);\n                actions.resetForm();\n                navigate('/main');\n              })\n              .catch(error => {\n                if (error === 'Request failed with status code 403') {\n                  return toast.error('Email or password is wrong');\n                }\n                if (error === 'Request failed with status code 401') {\n                  return toast.error('Email is not verified');\n                }\n              });\n          }}\n        >\n          {({ errors, touched }) => (\n            <StyledForm>\n              <Title>Sign In</Title>\n              <Label>\n                <SVG width=\"24\" height=\"24\" color={setSVGColor(errors.email, touched.email)}>\n                      <use href={sprite + '#icon-user'} />\n                  </SVG>\n                  {setInfoSVG(errors.email, touched.email)}\n                  <Input\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    validate={validateEmail}\n                  />\n\n                <Error name=\"email\" component=\"div\" color={setSVGColor(errors.email, touched.email)}/>\n              </Label>\n              <Label>\n                <SVG width=\"24\" height=\"24\" color={setSVGColor(errors.password, touched.password)}>\n                      <use href={sprite + '#icon-user'} />\n                  </SVG>\n                  {setInfoSVG(errors.password, touched.password)}\n                  <Input\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    validate={validatePassword}\n                  />\n\n                <Error name=\"password\" component=\"div\" color={setSVGColor(errors.password, touched.password)}/>\n              </Label>\n              <Button type=\"submit\">Sign in</Button>\n            </StyledForm>\n          )}\n        </Formik>\n        <LinkStyled to=\"/register\">Registration</LinkStyled>\n      </FormWrapper>\n    </Container>\n    </Section>\n  );\n};\n","import { SigninForm } from 'components/SigningForm/SigningForm';\n\nexport default function SigninPage() {\n  return <SigninForm />\n}\n"],"names":["Section","styled","props","theme","colors","white","backMob","backMob2x","backTabl","backTabl2x","backDesktop","backDesktop2x","SVG","color","InfoSVG","Error","ErrorMessage","Label","Input","Field","error","touched","setFocusColor","Button","green","hover","transition","black","StyledForm","Form","FormWrapper","LinkStyled","NavLink","Title","BackgroundImage","imgMob","imgMob2x","imgTabl","imgTabl2x","imgDesktop","imgDesktop2x","Container","setSVGColor","errors","setInfoSVG","href","sprite","SigninForm","dispatch","useDispatch","navigate","useNavigate","validateEmail","value","test","validatePassword","initialValues","email","password","validateOnChange","validateOnBlur","onSubmit","values","actions","loginUser","unwrap","then","toast","resetForm","catch","width","height","name","placeholder","validate","component","type","to","SigninPage"],"sourceRoot":""}