{"version":3,"file":"static/js/998.0bb55a63.chunk.js","mappings":"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","sources":["../node_modules/react-loader-spinner/dist/esm/loader/InfinitySpin.js","../node_modules/react-loader-spinner/dist/esm/type.js","../node_modules/styled-tools/dist/es/prop.js","../node_modules/styled-tools/dist/es/ifProp.js","../node_modules/react-loader-spinner/dist/esm/loader/RotatingLines.js","../node_modules/react-loader-spinner/dist/esm/loader/TailSpin.js","../node_modules/react-loader-spinner/dist/esm/loader/Triangle.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { DEFAULT_COLOR } from '../type';\nvar len = 242.776657104492;\nvar time = 1.6;\nvar anim = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  12.5% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n  43.75% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n  100% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n\"], [\"\\n  12.5% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n  43.75% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n  100% {\\n    stroke-dasharray: \", \"px, \", \"px;\\n    stroke-dashoffset: -\", \"px;\\n  }\\n\"])), len * 0.14, len, len * 0.11, len * 0.35, len, len * 0.35, len * 0.01, len, len * 0.99);\nvar Path = styled.path(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  stroke-dasharray: \", \"px, \", \";\\n  stroke-dashoffset: 0;\\n  animation: \", \" \", \"s linear infinite;\\n\"], [\"\\n  stroke-dasharray: \", \"px, \", \";\\n  stroke-dashoffset: 0;\\n  animation: \", \" \", \"s linear infinite;\\n\"])), len * 0.01, len, anim, time);\nvar InfinitySpin = function (_a) {\n    var _b = _a.color, color = _b === void 0 ? DEFAULT_COLOR : _b, _c = _a.width, width = _c === void 0 ? '200' : _c;\n    return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"\".concat(width), height: \"\".concat(Number(width) * 0.5), viewBox: \"0 0 \".concat(width, \" \").concat(Number(200 * 0.5)), \"data-testid\": \"infinity-spin\" },\n        React.createElement(Path, { \"data-testid\": \"infinity-spin-path-1\", stroke: color, fill: \"none\", strokeWidth: \"4\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeMiterlimit: \"10\", d: \"M93.9,46.4c9.3,9.5,13.8,17.9,23.5,17.9s17.5-7.8,17.5-17.5s-7.8-17.6-17.5-17.5c-9.7,0.1-13.3,7.2-22.1,17.1 c-8.9,8.8-15.7,17.9-25.4,17.9s-17.5-7.8-17.5-17.5s7.8-17.5,17.5-17.5S86.2,38.6,93.9,46.4z\" }),\n        React.createElement(\"path\", { \"data-testid\": \"infinity-spin-path-2\", opacity: \"0.07\", fill: \"none\", stroke: color, strokeWidth: \"4\", strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeMiterlimit: \"10\", d: \"M93.9,46.4c9.3,9.5,13.8,17.9,23.5,17.9s17.5-7.8,17.5-17.5s-7.8-17.6-17.5-17.5c-9.7,0.1-13.3,7.2-22.1,17.1 c-8.9,8.8-15.7,17.9-25.4,17.9s-17.5-7.8-17.5-17.5s7.8-17.5,17.5-17.5S86.2,38.6,93.9,46.4z\" })));\n};\nexport default InfinitySpin;\nvar templateObject_1, templateObject_2;\n","export var DEFAULT_COLOR = '#4fa94d';\nexport var DEFAULT_WAI_ARIA_ATTRIBUTE = {\n    'aria-busy': true,\n    role: 'status',\n};\n","/**\n * Returns the value of `props[path]` or `defaultValue`\n * @example\n * import styled from \"styled-components\";\n * import { prop } from \"styled-tools\";\n *\n * const Button = styled.button`\n *   color: ${prop(\"color\", \"red\")};\n * `;\n */\nvar prop = function prop(path, defaultValue) {\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof props[path] !== \"undefined\") {\n      return props[path];\n    }\n\n    if (path && path.indexOf(\".\") > 0) {\n      var paths = path.split(\".\");\n      var length = paths.length;\n      var object = props[paths[0]];\n      var index = 1;\n\n      while (object != null && index < length) {\n        object = object[paths[index]];\n        index += 1;\n      }\n\n      if (typeof object !== \"undefined\") {\n        return object;\n      }\n    }\n\n    return defaultValue;\n  };\n};\n\nexport default prop;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable no-use-before-define */\nimport prop from \"./prop\";\n\nvar parseFunction = function parseFunction(props, test) {\n  return Boolean(test(props));\n};\n\nvar parseObject = function parseObject(props, test) {\n  var keys = Object.keys(test);\n  var length = keys.length;\n\n  for (var index = 0; index < length; index += 1) {\n    var key = keys[index];\n    var expected = test[key];\n    var value = prop(key)(props);\n\n    if (expected !== value) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar parseString = function parseString(props, test) {\n  return Boolean(prop(test)(props));\n};\n\nvar parseMap = {\n  function: parseFunction,\n  object: parseObject,\n  string: parseString\n};\n/**\n * Returns `pass` if prop is truthy. Otherwise returns `fail`\n * @example\n * import styled from \"styled-components\";\n * import { ifProp, palette } from \"styled-tools\";\n *\n * const Button = styled.button`\n *   background-color: ${ifProp(\"transparent\", \"transparent\", palette(0))};\n *   color: ${ifProp([\"transparent\", \"accent\"], palette(\"secondary\"))};\n *   font-size: ${ifProp({ size: \"large\" }, \"20px\", ifProp({ size: \"medium\" }, \"16px\", \"12px\"))};\n * `;\n */\n\nvar ifProp = function ifProp(test) {\n  var pass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var fail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  return function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var result = true;\n\n    if (Array.isArray(test)) {\n      var length = test.length;\n      var index = 0;\n\n      while (result && index < length) {\n        result = parseMap[_typeof(test[index])](props, test[index]);\n        index += 1;\n      }\n    } else {\n      result = parseMap[_typeof(test)](props, test);\n    }\n\n    var value = result ? pass : fail;\n    return typeof value === \"function\" ? value(props) : value;\n  };\n};\n\nexport default ifProp;","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useCallback } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { prop } from 'styled-tools';\nimport { DEFAULT_COLOR, DEFAULT_WAI_ARIA_ATTRIBUTE } from '../type';\nvar spin = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n to {\\n    transform: rotate(360deg);\\n  }\\n\"], [\"\\n to {\\n    transform: rotate(360deg);\\n  }\\n\"])));\nvar POINTS = [0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330];\nvar Svg = styled.svg(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  animation: \", \" 0.75s steps(12, end) infinite;\\n  animation-duration: \", \"s;\\n\"], [\"\\n  animation: \", \" 0.75s steps(12, end) infinite;\\n  animation-duration: \", \"s;\\n\"])), spin, prop('speed', '0.75'));\nvar Polyline = styled.polyline(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  stroke-width: \", \"px;\\n  stroke-linecap: round;\\n\\n  &:nth-child(12n + 0) {\\n    stroke-opacity: 0.08;\\n  }\\n\\n  &:nth-child(12n + 1) {\\n    stroke-opacity: 0.17;\\n  }\\n\\n  &:nth-child(12n + 2) {\\n    stroke-opacity: 0.25;\\n  }\\n\\n  &:nth-child(12n + 3) {\\n    stroke-opacity: 0.33;\\n  }\\n\\n  &:nth-child(12n + 4) {\\n    stroke-opacity: 0.42;\\n  }\\n\\n  &:nth-child(12n + 5) {\\n    stroke-opacity: 0.5;\\n  }\\n\\n  &:nth-child(12n + 6) {\\n    stroke-opacity: 0.58;\\n  }\\n\\n  &:nth-child(12n + 7) {\\n    stroke-opacity: 0.66;\\n  }\\n\\n  &:nth-child(12n + 8) {\\n    stroke-opacity: 0.75;\\n  }\\n\\n  &:nth-child(12n + 9) {\\n    stroke-opacity: 0.83;\\n  }\\n\\n  &:nth-child(12n + 11) {\\n    stroke-opacity: 0.92;\\n  }\\n\"], [\"\\n  stroke-width: \", \"px;\\n  stroke-linecap: round;\\n\\n  &:nth-child(12n + 0) {\\n    stroke-opacity: 0.08;\\n  }\\n\\n  &:nth-child(12n + 1) {\\n    stroke-opacity: 0.17;\\n  }\\n\\n  &:nth-child(12n + 2) {\\n    stroke-opacity: 0.25;\\n  }\\n\\n  &:nth-child(12n + 3) {\\n    stroke-opacity: 0.33;\\n  }\\n\\n  &:nth-child(12n + 4) {\\n    stroke-opacity: 0.42;\\n  }\\n\\n  &:nth-child(12n + 5) {\\n    stroke-opacity: 0.5;\\n  }\\n\\n  &:nth-child(12n + 6) {\\n    stroke-opacity: 0.58;\\n  }\\n\\n  &:nth-child(12n + 7) {\\n    stroke-opacity: 0.66;\\n  }\\n\\n  &:nth-child(12n + 8) {\\n    stroke-opacity: 0.75;\\n  }\\n\\n  &:nth-child(12n + 9) {\\n    stroke-opacity: 0.83;\\n  }\\n\\n  &:nth-child(12n + 11) {\\n    stroke-opacity: 0.92;\\n  }\\n\"])), function (props) { return props.width; });\nexport default function RotatingLines(_a) {\n    var _b = _a.strokeColor, strokeColor = _b === void 0 ? DEFAULT_COLOR : _b, _c = _a.strokeWidth, strokeWidth = _c === void 0 ? '5' : _c, _d = _a.animationDuration, animationDuration = _d === void 0 ? '0.75' : _d, _e = _a.width, width = _e === void 0 ? '96' : _e, _f = _a.visible, visible = _f === void 0 ? true : _f, _g = _a.ariaLabel, ariaLabel = _g === void 0 ? 'rotating-lines-loading' : _g;\n    var lines = useCallback(function () {\n        return POINTS.map(function (point) { return (React.createElement(Polyline, { key: point, points: \"24,12 24,4\", width: strokeWidth, transform: \"rotate(\".concat(point, \", 24, 24)\") })); });\n    }, [strokeWidth]);\n    return !visible ? null : (React.createElement(Svg, __assign({ xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 48 48\", width: width, stroke: strokeColor, speed: animationDuration, \"data-testid\": \"rotating-lines-svg\", \"aria-label\": ariaLabel }, DEFAULT_WAI_ARIA_ATTRIBUTE), lines()));\n}\nvar templateObject_1, templateObject_2, templateObject_3;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { getDefaultStyle } from '../helpers';\nimport { DEFAULT_COLOR, DEFAULT_WAI_ARIA_ATTRIBUTE } from '../type';\nexport var TailSpin = function (_a) {\n    var _b = _a.height, height = _b === void 0 ? 80 : _b, _c = _a.width, width = _c === void 0 ? 80 : _c, _d = _a.radius, radius = _d === void 0 ? 1 : _d, _e = _a.color, color = _e === void 0 ? DEFAULT_COLOR : _e, _f = _a.ariaLabel, ariaLabel = _f === void 0 ? 'tail-spin-loading' : _f, wrapperStyle = _a.wrapperStyle, wrapperClass = _a.wrapperClass, _g = _a.visible, visible = _g === void 0 ? true : _g;\n    return (React.createElement(\"div\", __assign({ style: __assign(__assign({}, getDefaultStyle(visible)), wrapperStyle), className: wrapperClass, \"data-testid\": \"tail-spin-loading\", \"aria-label\": ariaLabel }, DEFAULT_WAI_ARIA_ATTRIBUTE),\n        React.createElement(\"svg\", { width: width, height: height, viewBox: \"0 0 38 38\", xmlns: \"http://www.w3.org/2000/svg\", \"data-testid\": \"tail-spin-svg\" },\n            React.createElement(\"defs\", null,\n                React.createElement(\"linearGradient\", { x1: \"8.042%\", y1: \"0%\", x2: \"65.682%\", y2: \"23.865%\", id: \"a\" },\n                    React.createElement(\"stop\", { stopColor: color, stopOpacity: \"0\", offset: \"0%\" }),\n                    React.createElement(\"stop\", { stopColor: color, stopOpacity: \".631\", offset: \"63.146%\" }),\n                    React.createElement(\"stop\", { stopColor: color, offset: \"100%\" }))),\n            React.createElement(\"g\", { fill: \"none\", fillRule: \"evenodd\" },\n                React.createElement(\"g\", { transform: \"translate(1 1)\" },\n                    React.createElement(\"path\", { d: \"M36 18c0-9.94-8.06-18-18-18\", id: \"Oval-2\", stroke: color, strokeWidth: \"2\" },\n                        React.createElement(\"animateTransform\", { attributeName: \"transform\", type: \"rotate\", from: \"0 18 18\", to: \"360 18 18\", dur: \"0.9s\", repeatCount: \"indefinite\" })),\n                    React.createElement(\"circle\", { fill: \"#fff\", cx: \"36\", cy: \"18\", r: radius },\n                        React.createElement(\"animateTransform\", { attributeName: \"transform\", type: \"rotate\", from: \"0 18 18\", to: \"360 18 18\", dur: \"0.9s\", repeatCount: \"indefinite\" })))))));\n};\nexport default TailSpin;\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { getDefaultStyle } from '../helpers';\nimport { DEFAULT_COLOR, DEFAULT_WAI_ARIA_ATTRIBUTE } from '../type';\nvar dash = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n to {\\n    stroke-dashoffset: 136;\\n  }\\n\"], [\"\\n to {\\n    stroke-dashoffset: 136;\\n  }\\n\"])));\nvar Polygon = styled.polygon(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  stroke-dasharray: 17;\\n  animation: \", \" 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;\\n\"], [\"\\n  stroke-dasharray: 17;\\n  animation: \", \" 2.5s cubic-bezier(0.35, 0.04, 0.63, 0.95) infinite;\\n\"])), dash);\nvar SVG = styled.svg(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  transform-origin: 50% 65%;\\n\"], [\"\\n  transform-origin: 50% 65%;\\n\"])));\nvar Triangle = function (_a) {\n    var _b = _a.height, height = _b === void 0 ? 80 : _b, _c = _a.width, width = _c === void 0 ? 80 : _c, _d = _a.color, color = _d === void 0 ? DEFAULT_COLOR : _d, _e = _a.ariaLabel, ariaLabel = _e === void 0 ? 'triangle-loading' : _e, wrapperStyle = _a.wrapperStyle, wrapperClass = _a.wrapperClass, _f = _a.visible, visible = _f === void 0 ? true : _f;\n    return (React.createElement(\"div\", __assign({ style: __assign(__assign({}, getDefaultStyle(visible)), wrapperStyle), className: \"\".concat(wrapperClass), \"data-testid\": \"triangle-loading\", \"aria-label\": ariaLabel }, DEFAULT_WAI_ARIA_ATTRIBUTE),\n        React.createElement(SVG, { id: \"triangle\", width: width, height: height, viewBox: \"-3 -4 39 39\", \"data-testid\": \"triangle-svg\" },\n            React.createElement(Polygon, { fill: \"transparent\", stroke: color, strokeWidth: \"1\", points: \"16,0 32,32 0,32\" }))));\n};\nexport default Triangle;\nvar templateObject_1, templateObject_2, templateObject_3;\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["templateObject_1","templateObject_2","DEFAULT_WAI_ARIA_ATTRIBUTE","role","__makeTemplateObject","cooked","raw","Object","defineProperty","value","len","anim","keyframes","styled","path","defaultValue","props","arguments","length","undefined","indexOf","paths","split","object","index","templateObject_3","__assign","assign","t","s","i","n","p","prototype","hasOwnProperty","call","apply","this","spin","POINTS","Svg","prop","Polyline","width","RotatingLines","_a","_b","strokeColor","_c","strokeWidth","_d","animationDuration","_e","_f","visible","_g","ariaLabel","lines","useCallback","map","point","React","key","points","transform","concat","xmlns","viewBox","stroke","speed","dash","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","startLoop","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","fillWildcardKeyframes","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","registerPotentialNode","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","parseCSSVariable","exec","getVariableValue","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}